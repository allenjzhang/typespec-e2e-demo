// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// <auto-generated />

using System;
using System.Text.Json;
using System.Text.Json.Serialization;
using System.Net;
using System.Threading.Tasks;
using Microsoft.AspNetCore.Mvc;
using Microsoft.ContosoProviderHub.Service.Models;

namespace Microsoft.ContosoProviderHub.Service
{

    public interface IEmployees
    {
        ///<summary>
        /// Get a Employee
        ///</summary>
        Task<Employee> GetAsync(string apiVersion, string subscriptionId, string resourceGroupName, "Microsoft.ContosoProviderHub" provider, string employeeName);
        ///<summary>
        /// Create a Employee
        ///</summary>
        Task<Employee> CreateOrUpdateAsync(string apiVersion, string subscriptionId, string resourceGroupName, "Microsoft.ContosoProviderHub" provider, string employeeName, Employee resource);
        ///<summary>
        /// Update a Employee
        ///</summary>
        Task<Employee> UpdateAsync(string apiVersion, string subscriptionId, string resourceGroupName, "Microsoft.ContosoProviderHub" provider, string employeeName, Employee properties);
        ///<summary>
        /// Delete a Employee
        ///</summary>
        Task DeleteAsync(string apiVersion, string subscriptionId, string resourceGroupName, "Microsoft.ContosoProviderHub" provider, string employeeName);
        ///<summary>
        /// List Employee resources by resource group
        ///</summary>
        Task<EmployeeListResult> ListByResourceGroupAsync(string apiVersion, string subscriptionId, string resourceGroupName, "Microsoft.ContosoProviderHub" provider);
        ///<summary>
        /// List Employee resources by subscription ID
        ///</summary>
        Task<EmployeeListResult> ListBySubscriptionAsync(string apiVersion, string subscriptionId, "Microsoft.ContosoProviderHub" provider);
        ///<summary>
        /// A sample resource action that move employee to different location
        ///</summary>
        Task<MoveResponse> MoveAsync(string apiVersion, string subscriptionId, string resourceGroupName, "Microsoft.ContosoProviderHub" provider, string employeeName, MoveRequest body);
        ///<summary>
        /// A sample HEAD operation to check resource existence
        ///</summary>
        Task CheckExistenceAsync(string apiVersion, string subscriptionId, string resourceGroupName, "Microsoft.ContosoProviderHub" provider, string employeeName);

    }
}
