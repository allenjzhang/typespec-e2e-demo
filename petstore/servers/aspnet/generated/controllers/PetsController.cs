// Generated by @typespec/http-server-csharp
// <auto-generated />
#nullable enable

using System;using System.Net;using System.Threading.Tasks;using System.Text.Json;using System.Text.Json.Serialization;using Microsoft.AspNetCore.Mvc;using PetStore.Service.Models;using PetStore.Service;

namespace PetStore.Service.Controllers
{
[ApiController]
public partial class PetsController: ControllerBase
{

public PetsController(IPets operations)
{
    PetsImpl = operations;
}
internal virtual IPets PetsImpl { get;}

        ///<summary>
/// Gets an instance of the resource.
///</summary>
        [HttpGet]
        [Route("/pets/{petId}")]
        [ProducesResponseType((int)HttpStatusCode.OK, Type = typeof(Pet))]
        public virtual async Task<IActionResult> Get(int petId)
        {
          var result = await PetsImpl.GetAsync(petId);
          return Ok(result);
        }

        ///<summary>
/// Updates an existing instance of the resource.
///</summary>
        [HttpPatch]
        [Route("/pets/{petId}")]
        [ProducesResponseType((int)HttpStatusCode.OK, Type = typeof(Pet))]
        public virtual async Task<IActionResult> Update(int petId, PetUpdate body)
        {
          var result = await PetsImpl.UpdateAsync(petId, body);
          return Ok(result);
        }

        ///<summary>
/// Deletes an existing instance of the resource.
///</summary>
        [HttpDelete]
        [Route("/pets/{petId}")]
        [ProducesResponseType((int)HttpStatusCode.OK, Type = typeof(void))]
        public virtual async Task<IActionResult> Delete(int petId)
        {
          await PetsImpl.DeleteAsync(petId);
          return Ok();
        }

        ///<summary>
/// Creates a new instance of the resource.
///</summary>
        [HttpPost]
        [Route("/pets")]
        [ProducesResponseType((int)HttpStatusCode.OK, Type = typeof(Pet))]
[ProducesResponseType((int)HttpStatusCode.Created, Type = typeof(Pet))]
        public virtual async Task<IActionResult> Create(PetCreate body)
        {
          var result = await PetsImpl.CreateAsync(body);
          return Ok(result);
        }

        ///<summary>
/// Lists all instances of the resource.
///</summary>
        [HttpGet]
        [Route("/pets")]
        [ProducesResponseType((int)HttpStatusCode.OK, Type = typeof(PetCollectionWithNextLink))]
        public virtual async Task<IActionResult> List()
        {
          var result = await PetsImpl.ListAsync();
          return Ok(result);
        }

}
}
