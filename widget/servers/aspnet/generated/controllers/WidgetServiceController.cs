// Generated by @typespec/http-server-csharp
// <auto-generated />
#nullable enable

using System;using System.Net;using System.Threading.Tasks;using System.Text.Json;using System.Text.Json.Serialization;using Microsoft.AspNetCore.Mvc;using DemoService.Service.Models;using DemoService.Service;

namespace DemoService.Service.Controllers
{
[ApiController]
public partial class WidgetServiceController: ControllerBase
{

public WidgetServiceController(IWidgetService operations)
{
    WidgetServiceImpl = operations;
}
internal virtual IWidgetService WidgetServiceImpl { get;}

        ///<summary>
/// Gets an instance of the resource.
///</summary>
        [HttpGet]
        [Route("/{id}")]
        [ProducesResponseType((int)HttpStatusCode.OK, Type = typeof(Widget))]
        public virtual async Task<IActionResult> Get(string id)
        {
          var result = await WidgetServiceImpl.GetAsync(id);
          return Ok(result);
        }

        ///<summary>
/// Updates an existing instance of the resource.
///</summary>
        [HttpPatch]
        [Route("/{id}")]
        [ProducesResponseType((int)HttpStatusCode.OK, Type = typeof(Widget))]
        public virtual async Task<IActionResult> Update(string id, WidgetUpdate body)
        {
          var result = await WidgetServiceImpl.UpdateAsync(id, body);
          return Ok(result);
        }

        ///<summary>
/// Deletes an existing instance of the resource.
///</summary>
        [HttpDelete]
        [Route("/{id}")]
        [ProducesResponseType((int)HttpStatusCode.OK, Type = typeof(void))]
        public virtual async Task<IActionResult> Delete(string id)
        {
          await WidgetServiceImpl.DeleteAsync(id);
          return Ok();
        }

        ///<summary>
/// Creates a new instance of the resource.
///</summary>
        [HttpPost]
        [Route("/")]
        [ProducesResponseType((int)HttpStatusCode.OK, Type = typeof(Widget))]
[ProducesResponseType((int)HttpStatusCode.Created, Type = typeof(Widget))]
        public virtual async Task<IActionResult> Create(WidgetCreate body)
        {
          var result = await WidgetServiceImpl.CreateAsync(body);
          return Ok(result);
        }

        ///<summary>
/// Lists all instances of the resource.
///</summary>
        [HttpGet]
        [Route("/")]
        [ProducesResponseType((int)HttpStatusCode.OK, Type = typeof(WidgetCollectionWithNextLink))]
        public virtual async Task<IActionResult> List()
        {
          var result = await WidgetServiceImpl.ListAsync();
          return Ok(result);
        }

}
}
