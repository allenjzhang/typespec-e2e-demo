openapi: 3.0.0
info:
  title: Getitdone API
  version: 0.0.0
tags: []
paths:
  /comments:
    get:
      operationId: Comments_getComments
      parameters:
        - name: todoitem_id
          in: query
          required: false
          schema:
            type: string
          explode: false
        - name: project_id
          in: query
          required: false
          schema:
            type: string
          explode: false
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Comment'
    post:
      operationId: Comments_createComment
      parameters: []
      responses:
        '201':
          description: The request has succeeded and a new resource has been created as a result.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCommentRequest'
  /comments/{comment_id}:
    get:
      operationId: CommentOps_getComment
      parameters:
        - name: comment_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      operationId: CommentOps_updateComment
      parameters:
        - name: comment_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCommentRequest'
    delete:
      operationId: CommentOps_deleteComment
      parameters:
        - name: comment_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: 'There is no content to send for this request, but the headers may be useful. '
  /labels:
    get:
      operationId: Labels_getPersonalLabels
      parameters: []
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Label'
    post:
      operationId: Labels_createLabel
      parameters: []
      responses:
        '201':
          description: The request has succeeded and a new resource has been created as a result.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Label'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateLabelRequest'
  /labels/shared:
    get:
      operationId: SharedLabels_getSharedLabels
      parameters: []
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Label'
  /labels/shared/remove:
    post:
      operationId: SharedLabels_removeSharedLabel
      parameters: []
      responses:
        '204':
          description: 'There is no content to send for this request, but the headers may be useful. '
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RemoveSharedLabelRequest'
  /labels/shared/rename:
    post:
      operationId: SharedLabels_renameSharedLabel
      parameters: []
      responses:
        '204':
          description: 'There is no content to send for this request, but the headers may be useful. '
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RenameSharedLabelRequest'
  /labels/{label_id}:
    get:
      operationId: LabelOps_getPersonalLabel
      parameters:
        - name: label_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Label'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      operationId: LabelOps_updateLabel
      parameters:
        - name: label_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Label'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateLabelRequest'
    delete:
      operationId: LabelOps_deleteLabel
      parameters:
        - name: label_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: 'There is no content to send for this request, but the headers may be useful. '
  /projects:
    get:
      operationId: Projects_getProjects
      parameters:
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 50
          explode: false
        - name: offset
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 0
          explode: false
      responses:
        '200':
          description: The request has succeeded.
          headers:
            total_count:
              required: false
              schema:
                type: integer
                format: int32
            has_more:
              required: false
              schema:
                type: boolean
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Project'
    post:
      operationId: Projects_createProject
      parameters: []
      responses:
        '201':
          description: The request has succeeded and a new resource has been created as a result.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateProjectRequest'
  /projects/{project_id}:
    get:
      operationId: ProjectOps_getProject
      parameters:
        - name: project_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      operationId: ProjectOps_updateProject
      parameters:
        - name: project_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateProjectRequest'
    delete:
      operationId: ProjectOps_deleteProject
      parameters:
        - name: project_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: 'There is no content to send for this request, but the headers may be useful. '
  /projects/{project_id}/collaborators:
    get:
      operationId: ProjectCollaborators_getCollaborators
      parameters:
        - name: project_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Collaborator'
  /search:
    get:
      operationId: Search_search
      parameters:
        - name: query
          in: query
          required: true
          schema:
            type: string
          explode: false
        - name: include_projects
          in: query
          required: true
          schema:
            type: boolean
            default: true
          explode: false
        - name: include_todos
          in: query
          required: true
          schema:
            type: boolean
            default: true
          explode: false
        - name: include_comments
          in: query
          required: true
          schema:
            type: boolean
            default: false
          explode: false
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 50
          explode: false
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Search.SearchResults'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /sections:
    get:
      operationId: Sections_getSections
      parameters:
        - name: project_id
          in: query
          required: true
          schema:
            type: string
          explode: false
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Section'
    post:
      operationId: Sections_createSection
      parameters: []
      responses:
        '201':
          description: The request has succeeded and a new resource has been created as a result.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Section'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSectionRequest'
  /sections/{section_id}:
    get:
      operationId: SectionOps_getSection
      parameters:
        - name: section_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Section'
    put:
      operationId: SectionOps_updateSection
      parameters:
        - name: section_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Section'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateSectionRequest'
    delete:
      operationId: SectionOps_deleteSection
      parameters:
        - name: section_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: 'There is no content to send for this request, but the headers may be useful. '
  /todoitems:
    get:
      operationId: TodoItems_getTodoItems
      parameters:
        - name: project_id
          in: query
          required: false
          schema:
            type: string
          explode: false
        - name: is_completed
          in: query
          required: false
          schema:
            type: boolean
          explode: false
        - name: section_id
          in: query
          required: false
          schema:
            type: string
          explode: false
        - name: priority
          in: query
          required: false
          schema:
            type: integer
            format: int32
          explode: false
        - name: assignee_id
          in: query
          required: false
          schema:
            type: string
          explode: false
        - name: due_before
          in: query
          required: false
          schema:
            type: string
          explode: false
        - name: due_after
          in: query
          required: false
          schema:
            type: string
          explode: false
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 50
          explode: false
        - name: offset
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 0
          explode: false
      responses:
        '200':
          description: The request has succeeded.
          headers:
            total_count:
              required: false
              schema:
                type: integer
                format: int32
            has_more:
              required: false
              schema:
                type: boolean
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TodoItem'
    post:
      operationId: TodoItems_createTodoItem
      parameters: []
      responses:
        '201':
          description: The request has succeeded and a new resource has been created as a result.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TodoItem'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTodoItemRequest'
  /todoitems/bulk/complete:
    post:
      operationId: TodoItemsBulk_bulkCompleteTodos
      parameters: []
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TodoItemsBulk.BulkUpdateResponseBody'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TodoItemsBulk.BulkCompleteRequest'
  /todoitems/bulk/move:
    post:
      operationId: TodoItemsBulk_bulkMoveTodos
      parameters: []
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TodoItemsBulk.BulkUpdateResponseBody'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TodoItemsBulk.BulkMoveRequest'
  /todoitems/{todoitem_id}:
    get:
      operationId: TodoItemOps_getTodoItem
      parameters:
        - name: todoitem_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TodoItem'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      operationId: TodoItemOps_updateTodoItem
      parameters:
        - name: todoitem_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TodoItem'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTodoItemRequest'
    delete:
      operationId: TodoItemOps_deleteTodoItem
      parameters:
        - name: todoitem_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: 'There is no content to send for this request, but the headers may be useful. '
  /todoitems/{todoitem_id}/close:
    post:
      operationId: TodoItemOps_closeTodoItem
      parameters:
        - name: todoitem_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: 'There is no content to send for this request, but the headers may be useful. '
  /todoitems/{todoitem_id}/reopen:
    post:
      operationId: TodoItemOps_reopenTodoItem
      parameters:
        - name: todoitem_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: 'There is no content to send for this request, but the headers may be useful. '
components:
  schemas:
    Attachment:
      type: object
      required:
        - file_name
        - file_type
        - file_url
        - resource_type
      properties:
        file_name:
          type: string
        file_type:
          type: string
        file_url:
          type: string
        resource_type:
          type: string
    Collaborator:
      type: object
      required:
        - id
        - name
        - email
      properties:
        id:
          type: string
        name:
          type: string
        email:
          type: string
    Comment:
      type: object
      required:
        - content
        - id
        - posted_at
      properties:
        content:
          type: string
        id:
          type: string
        posted_at:
          type: string
        project_id:
          type: string
        todoitem_id:
          type: string
        attachment:
          $ref: '#/components/schemas/Attachment'
    CreateCommentRequest:
      type: object
      required:
        - content
      properties:
        content:
          type: string
        todoitem_id:
          type: string
        project_id:
          type: string
        attachment:
          $ref: '#/components/schemas/Attachment'
    CreateLabelRequest:
      type: object
      required:
        - name
      properties:
        name:
          type: string
        color:
          type: string
        order:
          type: integer
          format: int32
        is_favorite:
          type: boolean
    CreateProjectRequest:
      type: object
      required:
        - name
      properties:
        name:
          type: string
        color:
          type: string
        parent_id:
          type: string
        order:
          type: integer
          format: int32
        is_favorite:
          type: boolean
    CreateSectionRequest:
      type: object
      required:
        - name
        - project_id
      properties:
        name:
          type: string
        project_id:
          type: string
        order:
          type: integer
          format: int32
    CreateTodoItemRequest:
      type: object
      required:
        - content
      properties:
        content:
          type: string
        description:
          type: string
        due:
          $ref: '#/components/schemas/Due'
        labels:
          type: array
          items:
            type: string
        priority:
          type: integer
          format: int32
        parent_id:
          type: string
        order:
          type: integer
          format: int32
        project_id:
          type: string
        section_id:
          type: string
        assignee_id:
          type: string
    Due:
      type: object
      required:
        - date
        - is_recurring
      properties:
        date:
          type: string
        is_recurring:
          type: boolean
        datetime:
          type: string
        timezone:
          type: string
    ErrorResponse:
      type: object
      required:
        - error
        - status_code
      properties:
        error:
          type: string
        status_code:
          type: integer
          format: int32
        details:
          type: object
          additionalProperties:
            type: string
    Label:
      type: object
      required:
        - id
        - name
        - color
        - order
        - is_favorite
      properties:
        id:
          type: string
        name:
          type: string
        color:
          type: string
        order:
          type: integer
          format: int32
        is_favorite:
          type: boolean
    Project:
      type: object
      required:
        - id
        - name
        - comment_count
        - order
        - color
        - is_shared
        - is_favorite
        - is_inbox_project
        - is_team_inbox
        - view_style
        - url
      properties:
        id:
          type: string
        name:
          type: string
        comment_count:
          type: integer
          format: int32
        order:
          type: integer
          format: int32
        color:
          type: string
        is_shared:
          type: boolean
        is_favorite:
          type: boolean
        parent_id:
          type: string
        is_inbox_project:
          type: boolean
        is_team_inbox:
          type: boolean
        view_style:
          type: string
        url:
          type: string
    RemoveSharedLabelRequest:
      type: object
      required:
        - name
      properties:
        name:
          type: string
    RenameSharedLabelRequest:
      type: object
      required:
        - name
        - new_name
      properties:
        name:
          type: string
        new_name:
          type: string
    Search.SearchResultItem:
      type: object
      required:
        - type
        - id
        - title
        - snippet
        - url
      properties:
        type:
          type: string
        id:
          type: string
        title:
          type: string
        snippet:
          type: string
        url:
          type: string
    Search.SearchResults:
      type: object
      required:
        - results
        - total_count
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/Search.SearchResultItem'
        total_count:
          type: integer
          format: int32
    Section:
      type: object
      required:
        - id
        - project_id
        - order
        - name
      properties:
        id:
          type: string
        project_id:
          type: string
        order:
          type: integer
          format: int32
        name:
          type: string
    TodoItem:
      type: object
      required:
        - creator_id
        - created_at
        - comment_count
        - is_completed
        - content
        - description
        - id
        - labels
        - order
        - priority
        - project_id
        - url
      properties:
        creator_id:
          type: string
        created_at:
          type: string
        assignee_id:
          type: string
        assigner_id:
          type: string
        comment_count:
          type: integer
          format: int32
        is_completed:
          type: boolean
        content:
          type: string
        description:
          type: string
        due:
          $ref: '#/components/schemas/Due'
        duration:
          type: string
        id:
          type: string
        labels:
          type: array
          items:
            type: string
        order:
          type: integer
          format: int32
        priority:
          type: integer
          format: int32
        project_id:
          type: string
        section_id:
          type: string
        parent_id:
          type: string
        url:
          type: string
    TodoItemsBulk.BulkCompleteRequest:
      type: object
      required:
        - todo_ids
      properties:
        todo_ids:
          type: array
          items:
            type: string
    TodoItemsBulk.BulkMoveRequest:
      type: object
      required:
        - todo_ids
      properties:
        todo_ids:
          type: array
          items:
            type: string
        project_id:
          type: string
        section_id:
          type: string
    TodoItemsBulk.BulkUpdateResponseBody:
      type: object
      required:
        - updated_count
      properties:
        updated_count:
          type: integer
          format: int32
    UpdateCommentRequest:
      type: object
      properties:
        content:
          type: string
        attachment:
          $ref: '#/components/schemas/Attachment'
    UpdateLabelRequest:
      type: object
      properties:
        name:
          type: string
        color:
          type: string
        order:
          type: integer
          format: int32
        is_favorite:
          type: boolean
    UpdateProjectRequest:
      type: object
      properties:
        name:
          type: string
        color:
          type: string
        parent_id:
          type: string
        order:
          type: integer
          format: int32
        is_favorite:
          type: boolean
    UpdateSectionRequest:
      type: object
      properties:
        name:
          type: string
        order:
          type: integer
          format: int32
    UpdateTodoItemRequest:
      type: object
      properties:
        content:
          type: string
        description:
          type: string
        due:
          $ref: '#/components/schemas/Due'
        labels:
          type: array
          items:
            type: string
        priority:
          type: integer
          format: int32
        parent_id:
          type: string
        order:
          type: integer
          format: int32
        project_id:
          type: string
        section_id:
          type: string
        assignee_id:
          type: string
servers:
  - url: https://api.Getitdone.com
    description: Production server
    variables: {}
