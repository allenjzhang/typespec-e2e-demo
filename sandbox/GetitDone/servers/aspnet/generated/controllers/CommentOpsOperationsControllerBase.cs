// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// <auto-generated />

using System;
using System.Net;
using System.Threading.Tasks;
using System.Text.Json;
using System.Text.Json.Serialization;
using Microsoft.AspNetCore.Mvc;
using Getitdone.Service.Models;
using Getitdone.Service;

namespace Getitdone.Service.Controllers
{
    [ApiController]
    public abstract partial class CommentOpsOperationsControllerBase : ControllerBase
    {

        internal abstract ICommentOpsOperations CommentOpsOperationsImpl { get; }


        [HttpGet]
        [Route("/comments/{comment_id}")]
        [ProducesResponseType((int)HttpStatusCode.OK, Type = typeof(Comment))]
        public virtual async Task<IActionResult> GetComment(string commentId)
        {
            var result = await CommentOpsOperationsImpl.GetCommentAsync(commentId);
            return Ok(result);
        }


        [HttpPost]
        [Route("/comments/{comment_id}")]
        [ProducesResponseType((int)HttpStatusCode.OK, Type = typeof(Comment))]
        public virtual async Task<IActionResult> UpdateComment(string commentId, UpdateCommentRequest body)
        {
            var result = await CommentOpsOperationsImpl.UpdateCommentAsync(commentId, body);
            return Ok(result);
        }


        [HttpDelete]
        [Route("/comments/{comment_id}")]
        [ProducesResponseType((int)HttpStatusCode.NoContent, Type = typeof(void))]
        public virtual async Task<IActionResult> DeleteComment(string commentId)
        {
            await CommentOpsOperationsImpl.DeleteCommentAsync(commentId);
            return Ok();
        }

    }
}
