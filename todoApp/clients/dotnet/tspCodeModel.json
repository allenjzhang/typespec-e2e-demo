{
 "$id": "1",
 "name": "Todo",
 "apiVersions": [],
 "enums": [
  {
   "$id": "2",
   "kind": "enum",
   "name": "UserExistsResponse_code",
   "valueType": {
    "$id": "3",
    "kind": "string",
    "name": "string",
    "crossLanguageDefinitionId": "TypeSpec.string",
    "decorators": []
   },
   "values": [
    {
     "$id": "4",
     "kind": "enumvalue",
     "name": "user-exists",
     "value": "user-exists",
     "doc": "user-exists",
     "valueType": {
      "$ref": "3"
     },
     "enumType": {
      "$ref": "2"
     }
    }
   ],
   "crossLanguageDefinitionId": "",
   "namespace": "Todo.Users",
   "doc": "The UserExistsResponse_code",
   "isFixed": false,
   "isFlags": false,
   "usage": "Json,Exception",
   "decorators": []
  },
  {
   "$id": "5",
   "kind": "enum",
   "name": "InvalidUserResponse_code",
   "valueType": {
    "$id": "6",
    "kind": "string",
    "name": "string",
    "crossLanguageDefinitionId": "TypeSpec.string",
    "decorators": []
   },
   "values": [
    {
     "$id": "7",
     "kind": "enumvalue",
     "name": "invalid-user",
     "value": "invalid-user",
     "doc": "invalid-user",
     "valueType": {
      "$ref": "6"
     },
     "enumType": {
      "$ref": "5"
     }
    }
   ],
   "crossLanguageDefinitionId": "",
   "namespace": "Todo.Users",
   "doc": "The InvalidUserResponse_code",
   "isFixed": false,
   "isFlags": false,
   "usage": "Json,Exception",
   "decorators": []
  },
  {
   "$id": "8",
   "kind": "enum",
   "name": "TodoItemStatus",
   "crossLanguageDefinitionId": "Todo.TodoItem.status.anonymous",
   "valueType": {
    "$id": "9",
    "kind": "string",
    "name": "string",
    "crossLanguageDefinitionId": "TypeSpec.string",
    "decorators": []
   },
   "values": [
    {
     "$id": "10",
     "kind": "enumvalue",
     "name": "NotStarted",
     "value": "NotStarted",
     "valueType": {
      "$id": "11",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "8"
     },
     "decorators": []
    },
    {
     "$id": "12",
     "kind": "enumvalue",
     "name": "InProgress",
     "value": "InProgress",
     "valueType": {
      "$id": "13",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "8"
     },
     "decorators": []
    },
    {
     "$id": "14",
     "kind": "enumvalue",
     "name": "Completed",
     "value": "Completed",
     "valueType": {
      "$id": "15",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "8"
     },
     "decorators": []
    }
   ],
   "namespace": "",
   "isFixed": true,
   "isFlags": false,
   "usage": "Input,Output,Json",
   "decorators": []
  },
  {
   "$id": "16",
   "kind": "enum",
   "name": "NotFoundErrorResponse_code",
   "valueType": {
    "$id": "17",
    "kind": "string",
    "name": "string",
    "crossLanguageDefinitionId": "TypeSpec.string",
    "decorators": []
   },
   "values": [
    {
     "$id": "18",
     "kind": "enumvalue",
     "name": "not-found",
     "value": "not-found",
     "doc": "not-found",
     "valueType": {
      "$ref": "17"
     },
     "enumType": {
      "$ref": "16"
     }
    }
   ],
   "crossLanguageDefinitionId": "",
   "namespace": "Todo.TodoItems",
   "doc": "The NotFoundErrorResponse_code",
   "isFixed": false,
   "isFlags": false,
   "usage": "Json,Exception",
   "decorators": []
  },
  {
   "$id": "19",
   "kind": "enum",
   "name": "TodoItemPatchStatus",
   "crossLanguageDefinitionId": "Todo.TodoItems.TodoItemPatch.status.anonymous",
   "valueType": {
    "$id": "20",
    "kind": "string",
    "name": "string",
    "crossLanguageDefinitionId": "TypeSpec.string",
    "decorators": []
   },
   "values": [
    {
     "$id": "21",
     "kind": "enumvalue",
     "name": "NotStarted",
     "value": "NotStarted",
     "valueType": {
      "$id": "22",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "19"
     },
     "decorators": []
    },
    {
     "$id": "23",
     "kind": "enumvalue",
     "name": "InProgress",
     "value": "InProgress",
     "valueType": {
      "$id": "24",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "19"
     },
     "decorators": []
    },
    {
     "$id": "25",
     "kind": "enumvalue",
     "name": "Completed",
     "value": "Completed",
     "valueType": {
      "$id": "26",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "19"
     },
     "decorators": []
    }
   ],
   "namespace": "",
   "isFixed": true,
   "isFlags": false,
   "usage": "Input,JsonMergePatch,Json",
   "decorators": []
  }
 ],
 "models": [
  {
   "$id": "27",
   "kind": "model",
   "name": "User",
   "namespace": "Todo",
   "crossLanguageDefinitionId": "Todo.User",
   "usage": "Input,Json",
   "decorators": [],
   "properties": [
    {
     "$id": "28",
     "kind": "property",
     "name": "id",
     "serializedName": "id",
     "doc": "An autogenerated unique id for the user",
     "type": {
      "$id": "29",
      "kind": "safeint",
      "name": "safeint",
      "crossLanguageDefinitionId": "TypeSpec.safeint",
      "decorators": []
     },
     "optional": false,
     "readOnly": true,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "Todo.User.id",
     "serializationOptions": {
      "$id": "30",
      "json": {
       "$id": "31",
       "name": "id"
      }
     }
    },
    {
     "$id": "32",
     "kind": "property",
     "name": "username",
     "serializedName": "username",
     "doc": "The user's username",
     "type": {
      "$id": "33",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "optional": false,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "Todo.User.username",
     "serializationOptions": {
      "$id": "34",
      "json": {
       "$id": "35",
       "name": "username"
      }
     }
    },
    {
     "$id": "36",
     "kind": "property",
     "name": "email",
     "serializedName": "email",
     "doc": "The user's email address",
     "type": {
      "$id": "37",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "optional": false,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "Todo.User.email",
     "serializationOptions": {
      "$id": "38",
      "json": {
       "$id": "39",
       "name": "email"
      }
     }
    },
    {
     "$id": "40",
     "kind": "property",
     "name": "password",
     "serializedName": "password",
     "doc": "The user's password, provided when creating a user\nbut is otherwise not visible (and hashed by the backend)",
     "type": {
      "$id": "41",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "optional": false,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "Todo.User.password",
     "serializationOptions": {
      "$id": "42",
      "json": {
       "$id": "43",
       "name": "password"
      }
     }
    }
   ]
  },
  {
   "$id": "44",
   "kind": "model",
   "name": "UserCreatedResponse",
   "namespace": "Todo.Users",
   "crossLanguageDefinitionId": "Todo.Users.UserCreatedResponse",
   "usage": "Output,Json",
   "decorators": [],
   "properties": [
    {
     "$id": "45",
     "kind": "property",
     "name": "id",
     "serializedName": "id",
     "doc": "An autogenerated unique id for the user",
     "type": {
      "$id": "46",
      "kind": "safeint",
      "name": "safeint",
      "crossLanguageDefinitionId": "TypeSpec.safeint",
      "decorators": []
     },
     "optional": false,
     "readOnly": true,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "Todo.Users.UserCreatedResponse.id",
     "serializationOptions": {
      "$id": "47",
      "json": {
       "$id": "48",
       "name": "id"
      }
     }
    },
    {
     "$id": "49",
     "kind": "property",
     "name": "username",
     "serializedName": "username",
     "doc": "The user's username",
     "type": {
      "$id": "50",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "optional": false,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "Todo.Users.UserCreatedResponse.username",
     "serializationOptions": {
      "$id": "51",
      "json": {
       "$id": "52",
       "name": "username"
      }
     }
    },
    {
     "$id": "53",
     "kind": "property",
     "name": "email",
     "serializedName": "email",
     "doc": "The user's email address",
     "type": {
      "$id": "54",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "optional": false,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "Todo.Users.UserCreatedResponse.email",
     "serializationOptions": {
      "$id": "55",
      "json": {
       "$id": "56",
       "name": "email"
      }
     }
    },
    {
     "$id": "57",
     "kind": "property",
     "name": "password",
     "serializedName": "password",
     "doc": "The user's password, provided when creating a user\nbut is otherwise not visible (and hashed by the backend)",
     "type": {
      "$id": "58",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "optional": false,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "Todo.Users.UserCreatedResponse.password",
     "serializationOptions": {
      "$id": "59",
      "json": {
       "$id": "60",
       "name": "password"
      }
     }
    },
    {
     "$id": "61",
     "kind": "property",
     "name": "token",
     "serializedName": "token",
     "doc": "The token to use to construct the validate email address url",
     "type": {
      "$id": "62",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "optional": false,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "Todo.Users.UserCreatedResponse.token",
     "serializationOptions": {
      "$id": "63",
      "json": {
       "$id": "64",
       "name": "token"
      }
     }
    }
   ]
  },
  {
   "$id": "65",
   "kind": "model",
   "name": "UserExistsResponse",
   "namespace": "Todo.Users",
   "crossLanguageDefinitionId": "Todo.Users.UserExistsResponse",
   "usage": "Json,Exception",
   "doc": "The user already exists",
   "decorators": [],
   "baseModel": {
    "$id": "66",
    "kind": "model",
    "name": "ApiError",
    "namespace": "Todo",
    "crossLanguageDefinitionId": "Todo.ApiError",
    "usage": "Json,Exception",
    "decorators": [],
    "properties": [
     {
      "$id": "67",
      "kind": "property",
      "name": "code",
      "serializedName": "code",
      "doc": "A machine readable error code",
      "type": {
       "$id": "68",
       "kind": "string",
       "name": "string",
       "crossLanguageDefinitionId": "TypeSpec.string",
       "decorators": []
      },
      "optional": false,
      "readOnly": false,
      "discriminator": false,
      "flatten": false,
      "decorators": [],
      "crossLanguageDefinitionId": "Todo.ApiError.code",
      "serializationOptions": {
       "$id": "69",
       "json": {
        "$id": "70",
        "name": "code"
       }
      }
     },
     {
      "$id": "71",
      "kind": "property",
      "name": "message",
      "serializedName": "message",
      "doc": "A human readable message",
      "type": {
       "$id": "72",
       "kind": "string",
       "name": "string",
       "crossLanguageDefinitionId": "TypeSpec.string",
       "decorators": []
      },
      "optional": false,
      "readOnly": false,
      "discriminator": false,
      "flatten": false,
      "decorators": [],
      "crossLanguageDefinitionId": "Todo.ApiError.message",
      "serializationOptions": {
       "$id": "73",
       "json": {
        "$id": "74",
        "name": "message"
       }
      }
     }
    ]
   },
   "properties": [
    {
     "$id": "75",
     "kind": "property",
     "name": "code",
     "serializedName": "code",
     "type": {
      "$id": "76",
      "kind": "constant",
      "valueType": {
       "$ref": "2"
      },
      "value": "user-exists",
      "decorators": []
     },
     "optional": false,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "Todo.Users.UserExistsResponse.code",
     "serializationOptions": {
      "$id": "77",
      "json": {
       "$id": "78",
       "name": "code"
      }
     }
    }
   ]
  },
  {
   "$ref": "66"
  },
  {
   "$id": "79",
   "kind": "model",
   "name": "InvalidUserResponse",
   "namespace": "Todo.Users",
   "crossLanguageDefinitionId": "Todo.Users.InvalidUserResponse",
   "usage": "Json,Exception",
   "doc": "The user is invalid (e.g. forgot to enter email address)",
   "decorators": [],
   "baseModel": {
    "$ref": "66"
   },
   "properties": [
    {
     "$id": "80",
     "kind": "property",
     "name": "code",
     "serializedName": "code",
     "type": {
      "$id": "81",
      "kind": "constant",
      "valueType": {
       "$ref": "5"
      },
      "value": "invalid-user",
      "decorators": []
     },
     "optional": false,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "Todo.Users.InvalidUserResponse.code",
     "serializationOptions": {
      "$id": "82",
      "json": {
       "$id": "83",
       "name": "code"
      }
     }
    }
   ]
  },
  {
   "$id": "84",
   "kind": "model",
   "name": "Standard4XXResponse",
   "namespace": "Todo",
   "crossLanguageDefinitionId": "Todo.Standard4XXResponse",
   "usage": "Json,Exception",
   "doc": "Something is wrong with you.",
   "decorators": [],
   "baseModel": {
    "$ref": "66"
   },
   "properties": []
  },
  {
   "$id": "85",
   "kind": "model",
   "name": "Standard5XXResponse",
   "namespace": "Todo",
   "crossLanguageDefinitionId": "Todo.Standard5XXResponse",
   "usage": "Json,Exception",
   "doc": "Something is wrong with me.",
   "decorators": [],
   "baseModel": {
    "$ref": "66"
   },
   "properties": []
  },
  {
   "$id": "86",
   "kind": "model",
   "name": "TodoPage",
   "namespace": "Todo.TodoItems",
   "crossLanguageDefinitionId": "Todo.TodoItems.TodoPage",
   "usage": "Output,Json",
   "decorators": [],
   "properties": [
    {
     "$id": "87",
     "kind": "property",
     "name": "items",
     "serializedName": "items",
     "doc": "The items in the page",
     "type": {
      "$id": "88",
      "kind": "array",
      "name": "ArrayTodoItem",
      "valueType": {
       "$id": "89",
       "kind": "model",
       "name": "TodoItem",
       "namespace": "Todo",
       "crossLanguageDefinitionId": "Todo.TodoItem",
       "usage": "Input,Output,Json",
       "decorators": [],
       "properties": [
        {
         "$id": "90",
         "kind": "property",
         "name": "id",
         "serializedName": "id",
         "doc": "The item's unique id",
         "type": {
          "$id": "91",
          "kind": "safeint",
          "name": "safeint",
          "crossLanguageDefinitionId": "TypeSpec.safeint",
          "decorators": []
         },
         "optional": false,
         "readOnly": true,
         "discriminator": false,
         "flatten": false,
         "decorators": [],
         "crossLanguageDefinitionId": "Todo.TodoItem.id",
         "serializationOptions": {
          "$id": "92",
          "json": {
           "$id": "93",
           "name": "id"
          }
         }
        },
        {
         "$id": "94",
         "kind": "property",
         "name": "title",
         "serializedName": "title",
         "doc": "The item's title",
         "type": {
          "$id": "95",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "optional": false,
         "readOnly": false,
         "discriminator": false,
         "flatten": false,
         "decorators": [],
         "crossLanguageDefinitionId": "Todo.TodoItem.title",
         "serializationOptions": {
          "$id": "96",
          "json": {
           "$id": "97",
           "name": "title"
          }
         }
        },
        {
         "$id": "98",
         "kind": "property",
         "name": "createdBy",
         "serializedName": "createdBy",
         "doc": "User that created the todo",
         "type": {
          "$id": "99",
          "kind": "safeint",
          "name": "safeint",
          "crossLanguageDefinitionId": "TypeSpec.safeint",
          "decorators": []
         },
         "optional": false,
         "readOnly": true,
         "discriminator": false,
         "flatten": false,
         "decorators": [],
         "crossLanguageDefinitionId": "Todo.TodoItem.createdBy",
         "serializationOptions": {
          "$id": "100",
          "json": {
           "$id": "101",
           "name": "createdBy"
          }
         }
        },
        {
         "$id": "102",
         "kind": "property",
         "name": "assignedTo",
         "serializedName": "assignedTo",
         "doc": "User that the todo is assigned to",
         "type": {
          "$id": "103",
          "kind": "safeint",
          "name": "safeint",
          "crossLanguageDefinitionId": "TypeSpec.safeint",
          "decorators": []
         },
         "optional": true,
         "readOnly": false,
         "discriminator": false,
         "flatten": false,
         "decorators": [],
         "crossLanguageDefinitionId": "Todo.TodoItem.assignedTo",
         "serializationOptions": {
          "$id": "104",
          "json": {
           "$id": "105",
           "name": "assignedTo"
          }
         }
        },
        {
         "$id": "106",
         "kind": "property",
         "name": "description",
         "serializedName": "description",
         "doc": "A longer description of the todo item in markdown format",
         "type": {
          "$id": "107",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "optional": true,
         "readOnly": false,
         "discriminator": false,
         "flatten": false,
         "decorators": [],
         "crossLanguageDefinitionId": "Todo.TodoItem.description",
         "serializationOptions": {
          "$id": "108",
          "json": {
           "$id": "109",
           "name": "description"
          }
         }
        },
        {
         "$id": "110",
         "kind": "property",
         "name": "status",
         "serializedName": "status",
         "doc": "The status of the todo item",
         "type": {
          "$ref": "8"
         },
         "optional": false,
         "readOnly": false,
         "discriminator": false,
         "flatten": false,
         "decorators": [],
         "crossLanguageDefinitionId": "Todo.TodoItem.status",
         "serializationOptions": {
          "$id": "111",
          "json": {
           "$id": "112",
           "name": "status"
          }
         }
        },
        {
         "$id": "113",
         "kind": "property",
         "name": "createdAt",
         "serializedName": "createdAt",
         "doc": "When the todo item was created.",
         "type": {
          "$id": "114",
          "kind": "utcDateTime",
          "name": "utcDateTime",
          "encode": "rfc3339",
          "wireType": {
           "$id": "115",
           "kind": "string",
           "name": "string",
           "crossLanguageDefinitionId": "TypeSpec.string",
           "decorators": []
          },
          "crossLanguageDefinitionId": "TypeSpec.utcDateTime",
          "decorators": []
         },
         "optional": false,
         "readOnly": true,
         "discriminator": false,
         "flatten": false,
         "decorators": [],
         "crossLanguageDefinitionId": "Todo.TodoItem.createdAt",
         "serializationOptions": {
          "$id": "116",
          "json": {
           "$id": "117",
           "name": "createdAt"
          }
         }
        },
        {
         "$id": "118",
         "kind": "property",
         "name": "updatedAt",
         "serializedName": "updatedAt",
         "doc": "When the todo item was last updated",
         "type": {
          "$id": "119",
          "kind": "utcDateTime",
          "name": "utcDateTime",
          "encode": "rfc3339",
          "wireType": {
           "$id": "120",
           "kind": "string",
           "name": "string",
           "crossLanguageDefinitionId": "TypeSpec.string",
           "decorators": []
          },
          "crossLanguageDefinitionId": "TypeSpec.utcDateTime",
          "decorators": []
         },
         "optional": false,
         "readOnly": true,
         "discriminator": false,
         "flatten": false,
         "decorators": [],
         "crossLanguageDefinitionId": "Todo.TodoItem.updatedAt",
         "serializationOptions": {
          "$id": "121",
          "json": {
           "$id": "122",
           "name": "updatedAt"
          }
         }
        },
        {
         "$id": "123",
         "kind": "property",
         "name": "completedAt",
         "serializedName": "completedAt",
         "doc": "When the todo item was makred as completed",
         "type": {
          "$id": "124",
          "kind": "utcDateTime",
          "name": "utcDateTime",
          "encode": "rfc3339",
          "wireType": {
           "$id": "125",
           "kind": "string",
           "name": "string",
           "crossLanguageDefinitionId": "TypeSpec.string",
           "decorators": []
          },
          "crossLanguageDefinitionId": "TypeSpec.utcDateTime",
          "decorators": []
         },
         "optional": true,
         "readOnly": true,
         "discriminator": false,
         "flatten": false,
         "decorators": [],
         "crossLanguageDefinitionId": "Todo.TodoItem.completedAt",
         "serializationOptions": {
          "$id": "126",
          "json": {
           "$id": "127",
           "name": "completedAt"
          }
         }
        },
        {
         "$id": "128",
         "kind": "property",
         "name": "labels",
         "serializedName": "labels",
         "type": {
          "$id": "129",
          "kind": "union",
          "name": "TodoLabels",
          "variantTypes": [
           {
            "$id": "130",
            "kind": "string",
            "name": "string",
            "crossLanguageDefinitionId": "TypeSpec.string",
            "decorators": []
           },
           {
            "$id": "131",
            "kind": "array",
            "name": "Array",
            "valueType": {
             "$id": "132",
             "kind": "string",
             "name": "string",
             "crossLanguageDefinitionId": "TypeSpec.string",
             "decorators": []
            },
            "crossLanguageDefinitionId": "TypeSpec.Array",
            "decorators": []
           },
           {
            "$id": "133",
            "kind": "model",
            "name": "TodoLabelRecord",
            "namespace": "Todo",
            "crossLanguageDefinitionId": "Todo.TodoLabelRecord",
            "usage": "Input,Output,Json",
            "decorators": [],
            "properties": [
             {
              "$id": "134",
              "kind": "property",
              "name": "name",
              "serializedName": "name",
              "type": {
               "$id": "135",
               "kind": "string",
               "name": "string",
               "crossLanguageDefinitionId": "TypeSpec.string",
               "decorators": []
              },
              "optional": false,
              "readOnly": false,
              "discriminator": false,
              "flatten": false,
              "decorators": [],
              "crossLanguageDefinitionId": "Todo.TodoLabelRecord.name",
              "serializationOptions": {
               "$id": "136",
               "json": {
                "$id": "137",
                "name": "name"
               }
              }
             },
             {
              "$id": "138",
              "kind": "property",
              "name": "color",
              "serializedName": "color",
              "type": {
               "$id": "139",
               "kind": "string",
               "name": "string",
               "crossLanguageDefinitionId": "TypeSpec.string",
               "decorators": []
              },
              "optional": true,
              "readOnly": false,
              "discriminator": false,
              "flatten": false,
              "decorators": [],
              "crossLanguageDefinitionId": "Todo.TodoLabelRecord.color",
              "serializationOptions": {
               "$id": "140",
               "json": {
                "$id": "141",
                "name": "color"
               }
              }
             }
            ]
           },
           {
            "$id": "142",
            "kind": "array",
            "name": "ArrayTodoLabelRecord",
            "valueType": {
             "$ref": "133"
            },
            "crossLanguageDefinitionId": "TypeSpec.Array",
            "decorators": []
           }
          ],
          "namespace": "Todo",
          "decorators": []
         },
         "optional": true,
         "readOnly": false,
         "discriminator": false,
         "flatten": false,
         "decorators": [],
         "crossLanguageDefinitionId": "Todo.TodoItem.labels",
         "serializationOptions": {
          "$id": "143",
          "json": {
           "$id": "144",
           "name": "labels"
          }
         }
        },
        {
         "$id": "145",
         "kind": "property",
         "name": "_dummy",
         "serializedName": "_dummy",
         "type": {
          "$id": "146",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "optional": true,
         "readOnly": false,
         "discriminator": false,
         "flatten": false,
         "decorators": [],
         "crossLanguageDefinitionId": "Todo.TodoItem._dummy",
         "serializationOptions": {
          "$id": "147",
          "json": {
           "$id": "148",
           "name": "_dummy"
          }
         }
        }
       ]
      },
      "crossLanguageDefinitionId": "TypeSpec.Array",
      "decorators": []
     },
     "optional": false,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "Todo.TodoItems.TodoPage.items",
     "serializationOptions": {
      "$id": "149",
      "json": {
       "$id": "150",
       "name": "items"
      }
     }
    },
    {
     "$id": "151",
     "kind": "property",
     "name": "pageSize",
     "serializedName": "pageSize",
     "doc": "The number of items returned in this page",
     "type": {
      "$id": "152",
      "kind": "int32",
      "name": "int32",
      "crossLanguageDefinitionId": "TypeSpec.int32",
      "decorators": []
     },
     "optional": false,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "Todo.TodoItems.TodoPage.pageSize",
     "serializationOptions": {
      "$id": "153",
      "json": {
       "$id": "154",
       "name": "pageSize"
      }
     }
    },
    {
     "$id": "155",
     "kind": "property",
     "name": "totalSize",
     "serializedName": "totalSize",
     "doc": "The total number of items",
     "type": {
      "$id": "156",
      "kind": "int32",
      "name": "int32",
      "crossLanguageDefinitionId": "TypeSpec.int32",
      "decorators": []
     },
     "optional": false,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "Todo.TodoItems.TodoPage.totalSize",
     "serializationOptions": {
      "$id": "157",
      "json": {
       "$id": "158",
       "name": "totalSize"
      }
     }
    },
    {
     "$id": "159",
     "kind": "property",
     "name": "prevLink",
     "serializedName": "prevLink",
     "doc": "A link to the previous page, if it exists",
     "type": {
      "$id": "160",
      "kind": "url",
      "name": "url",
      "crossLanguageDefinitionId": "TypeSpec.url",
      "decorators": []
     },
     "optional": true,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "Todo.TodoItems.TodoPage.prevLink",
     "serializationOptions": {
      "$id": "161",
      "json": {
       "$id": "162",
       "name": "prevLink"
      }
     }
    },
    {
     "$id": "163",
     "kind": "property",
     "name": "nextLink",
     "serializedName": "nextLink",
     "doc": "A link to the next page, if it exists",
     "type": {
      "$id": "164",
      "kind": "url",
      "name": "url",
      "crossLanguageDefinitionId": "TypeSpec.url",
      "decorators": []
     },
     "optional": true,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "Todo.TodoItems.TodoPage.nextLink",
     "serializationOptions": {
      "$id": "165",
      "json": {
       "$id": "166",
       "name": "nextLink"
      }
     }
    }
   ]
  },
  {
   "$ref": "89"
  },
  {
   "$ref": "133"
  },
  {
   "$id": "167",
   "kind": "model",
   "name": "TodoAttachment",
   "namespace": "Todo",
   "crossLanguageDefinitionId": "Todo.TodoAttachment",
   "usage": "Input,Output,Json",
   "decorators": [],
   "properties": [
    {
     "$id": "168",
     "kind": "property",
     "name": "filename",
     "serializedName": "filename",
     "doc": "The file name of the attachment",
     "type": {
      "$id": "169",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "optional": false,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "Todo.TodoAttachment.filename",
     "serializationOptions": {
      "$id": "170",
      "json": {
       "$id": "171",
       "name": "filename"
      }
     }
    },
    {
     "$id": "172",
     "kind": "property",
     "name": "mediaType",
     "serializedName": "mediaType",
     "doc": "The media type of the attachment",
     "type": {
      "$id": "173",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "optional": false,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "Todo.TodoAttachment.mediaType",
     "serializationOptions": {
      "$id": "174",
      "json": {
       "$id": "175",
       "name": "mediaType"
      }
     }
    },
    {
     "$id": "176",
     "kind": "property",
     "name": "contents",
     "serializedName": "contents",
     "doc": "The contents of the file",
     "type": {
      "$id": "177",
      "kind": "bytes",
      "name": "bytes",
      "encode": "base64",
      "crossLanguageDefinitionId": "TypeSpec.bytes",
      "decorators": []
     },
     "optional": false,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "Todo.TodoAttachment.contents",
     "serializationOptions": {
      "$id": "178",
      "json": {
       "$id": "179",
       "name": "contents"
      }
     }
    }
   ]
  },
  {
   "$id": "180",
   "kind": "model",
   "name": "CreateJsonRequest",
   "namespace": "",
   "crossLanguageDefinitionId": "Todo.TodoItems.createJson.Request.anonymous",
   "usage": "Spread,Json",
   "decorators": [],
   "properties": [
    {
     "$id": "181",
     "kind": "property",
     "name": "item",
     "serializedName": "item",
     "type": {
      "$ref": "89"
     },
     "optional": false,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "createJson.Request.anonymous.item",
     "serializationOptions": {
      "$id": "182",
      "json": {
       "$id": "183",
       "name": "item"
      }
     }
    },
    {
     "$id": "184",
     "kind": "property",
     "name": "attachments",
     "serializedName": "attachments",
     "type": {
      "$id": "185",
      "kind": "array",
      "name": "ArrayTodoAttachment",
      "valueType": {
       "$ref": "167"
      },
      "crossLanguageDefinitionId": "TypeSpec.Array",
      "decorators": []
     },
     "optional": true,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "createJson.Request.anonymous.attachments",
     "serializationOptions": {
      "$id": "186",
      "json": {
       "$id": "187",
       "name": "attachments"
      }
     }
    }
   ]
  },
  {
   "$id": "188",
   "kind": "model",
   "name": "InvalidTodoItem",
   "namespace": "Todo.TodoItems",
   "crossLanguageDefinitionId": "Todo.TodoItems.InvalidTodoItem",
   "usage": "Json,Exception",
   "decorators": [],
   "baseModel": {
    "$ref": "66"
   },
   "properties": []
  },
  {
   "$id": "189",
   "kind": "model",
   "name": "ToDoItemMultipartRequest",
   "namespace": "Todo",
   "crossLanguageDefinitionId": "Todo.ToDoItemMultipartRequest",
   "usage": "Input,MultipartFormData",
   "decorators": [],
   "properties": [
    {
     "$id": "190",
     "kind": "property",
     "name": "item",
     "serializedName": "item",
     "type": {
      "$ref": "89"
     },
     "optional": false,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "Todo.ToDoItemMultipartRequest.item",
     "serializationOptions": {
      "$id": "191",
      "multipart": {
       "$id": "192",
       "isFilePart": false,
       "isMulti": false,
       "defaultContentTypes": [
        "application/json"
       ],
       "name": "item"
      }
     }
    },
    {
     "$id": "193",
     "kind": "property",
     "name": "attachments",
     "serializedName": "attachments",
     "type": {
      "$id": "194",
      "kind": "array",
      "name": "ArrayHttpPart",
      "valueType": {
       "$id": "195",
       "kind": "model",
       "name": "File",
       "namespace": "TypeSpec.Http",
       "crossLanguageDefinitionId": "TypeSpec.Http.File",
       "usage": "Input",
       "doc": "A file in an HTTP request, response, or multipart payload.\n\nFiles have a special meaning that the HTTP library understands. When the body of an HTTP request, response,\nor multipart payload is _effectively_ an instance of `TypeSpec.Http.File` or any type that extends it, the\noperation is treated as a file upload or download.\n\nWhen using file bodies, the fields of the file model are defined to come from particular locations by default:\n\n- `contentType`: The `Content-Type` header of the request, response, or multipart payload (CANNOT be overridden or changed).\n- `contents`: The body of the request, response, or multipart payload (CANNOT be overridden or changed).\n- `filename`: The `filename` parameter value of the `Content-Disposition` header of the response or multipart payload\n(MAY be overridden or changed).\n\nA File may be used as a normal structured JSON object in a request or response, if the request specifies an explicit\n`Content-Type` header. In this case, the entire File model is serialized as if it were any other model. In a JSON payload,\nit will have a structure like:\n\n```\n{\n  \"contentType\": <string?>,\n  \"filename\": <string?>,\n  \"contents\": <string, base64>\n}\n```\n\nThe `contentType` _within_ the file defines what media types the data inside the file can be, but if the specification\ndefines a `Content-Type` for the payload as HTTP metadata, that `Content-Type` metadata defines _how the file is\nserialized_. See the examples below for more information.\n\nNOTE: The `filename` and `contentType` fields are optional. Furthermore, the default location of `filename`\n(`Content-Disposition: <disposition>; filename=<filename>`) is only valid in HTTP responses and multipart payloads. If\nyou wish to send the `filename` in a request, you must use HTTP metadata decorators to describe the location of the\n`filename` field. You can combine the metadata decorators with `@visibility` to control when the `filename` location\nis overridden, as shown in the examples below.",
       "summary": "A file in an HTTP request, response, or multipart payload.",
       "decorators": [],
       "properties": [
        {
         "$id": "196",
         "kind": "property",
         "name": "contentType",
         "serializedName": "contentType",
         "summary": "The allowed media (MIME) types of the file contents.",
         "doc": "The allowed media (MIME) types of the file contents.\n\nIn file bodies, this value comes from the `Content-Type` header of the request or response. In JSON bodies,\nthis value is serialized as a field in the response.\n\nNOTE: this is not _necessarily_ the same as the `Content-Type` header of the request or response, but\nit will be for file bodies. It may be different if the file is serialized as a JSON object. It always refers to the\n_contents_ of the file, and not necessarily the way the file itself is transmitted or serialized.",
         "type": {
          "$id": "197",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "optional": true,
         "readOnly": false,
         "discriminator": false,
         "flatten": false,
         "decorators": [],
         "crossLanguageDefinitionId": "TypeSpec.Http.File.contentType",
         "serializationOptions": {
          "$id": "198"
         }
        },
        {
         "$id": "199",
         "kind": "property",
         "name": "filename",
         "serializedName": "filename",
         "summary": "The name of the file, if any.",
         "doc": "The name of the file, if any.\n\nIn file bodies, this value comes from the `filename` parameter of the `Content-Disposition` header of the response\nor multipart payload. In JSON bodies, this value is serialized as a field in the response.\n\nNOTE: By default, `filename` cannot be sent in request payloads and can only be sent in responses and multipart\npayloads, as the `Content-Disposition` header is not valid in requests. If you want to send the `filename` in a request,\nyou must extend the `File` model and override the `filename` property with a different location defined by HTTP metadata\ndecorators.",
         "type": {
          "$id": "200",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "optional": true,
         "readOnly": false,
         "discriminator": false,
         "flatten": false,
         "decorators": [],
         "crossLanguageDefinitionId": "TypeSpec.Http.File.filename",
         "serializationOptions": {
          "$id": "201"
         }
        },
        {
         "$id": "202",
         "kind": "property",
         "name": "contents",
         "serializedName": "contents",
         "summary": "The contents of the file.",
         "doc": "The contents of the file.\n\nIn file bodies, this value comes from the body of the request, response, or multipart payload. In JSON bodies,\nthis value is serialized as a field in the response.",
         "type": {
          "$id": "203",
          "kind": "bytes",
          "name": "bytes",
          "encode": "base64",
          "crossLanguageDefinitionId": "TypeSpec.bytes",
          "decorators": []
         },
         "optional": false,
         "readOnly": false,
         "discriminator": false,
         "flatten": false,
         "decorators": [],
         "crossLanguageDefinitionId": "TypeSpec.Http.File.contents",
         "serializationOptions": {
          "$id": "204"
         }
        }
       ]
      },
      "crossLanguageDefinitionId": "TypeSpec.Array",
      "decorators": []
     },
     "optional": true,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "Todo.ToDoItemMultipartRequest.attachments",
     "serializationOptions": {
      "$id": "205",
      "multipart": {
       "$id": "206",
       "isFilePart": true,
       "isMulti": true,
       "filename": {
        "$id": "207",
        "doc": "The name of the file, if any.\n\nIn file bodies, this value comes from the `filename` parameter of the `Content-Disposition` header of the response\nor multipart payload. In JSON bodies, this value is serialized as a field in the response.\n\nNOTE: By default, `filename` cannot be sent in request payloads and can only be sent in responses and multipart\npayloads, as the `Content-Disposition` header is not valid in requests. If you want to send the `filename` in a request,\nyou must extend the `File` model and override the `filename` property with a different location defined by HTTP metadata\ndecorators.",
        "summary": "The name of the file, if any.",
        "apiVersions": [],
        "type": {
         "$id": "8551",
         "kind": "string",
         "decorators": [],
         "name": "string",
         "doc": "A sequence of textual characters.",
         "crossLanguageDefinitionId": "TypeSpec.string"
        },
        "name": "filename",
        "isGeneratedName": false,
        "optional": true,
        "isApiVersionParam": false,
        "onClient": false,
        "crossLanguageDefinitionId": "TypeSpec.Http.File.filename",
        "decorators": [],
        "visibility": [
         1,
         2,
         4,
         8,
         16
        ],
        "access": "public",
        "kind": "property",
        "discriminator": false,
        "serializedName": "filename",
        "isMultipartFileInput": false,
        "flatten": false,
        "serializationOptions": {
         "$ref": "201"
        }
       },
       "contentType": {
        "$id": "8552",
        "doc": "The allowed media (MIME) types of the file contents.\n\nIn file bodies, this value comes from the `Content-Type` header of the request or response. In JSON bodies,\nthis value is serialized as a field in the response.\n\nNOTE: this is not _necessarily_ the same as the `Content-Type` header of the request or response, but\nit will be for file bodies. It may be different if the file is serialized as a JSON object. It always refers to the\n_contents_ of the file, and not necessarily the way the file itself is transmitted or serialized.",
        "summary": "The allowed media (MIME) types of the file contents.",
        "apiVersions": [],
        "type": {
         "$id": "8561",
         "kind": "string",
         "decorators": [],
         "name": "string",
         "doc": "A sequence of textual characters.",
         "crossLanguageDefinitionId": "TypeSpec.string"
        },
        "name": "contentType",
        "isGeneratedName": false,
        "optional": true,
        "isApiVersionParam": false,
        "onClient": false,
        "crossLanguageDefinitionId": "TypeSpec.Http.File.contentType",
        "decorators": [],
        "visibility": [
         1,
         2,
         4,
         8,
         16
        ],
        "access": "public",
        "kind": "property",
        "discriminator": false,
        "serializedName": "contentType",
        "isMultipartFileInput": false,
        "flatten": false,
        "serializationOptions": {
         "$ref": "198"
        }
       },
       "defaultContentTypes": [
        "*/*"
       ],
       "name": "attachments"
      }
     }
    }
   ]
  },
  {
   "$ref": "195"
  },
  {
   "$id": "8562",
   "kind": "model",
   "name": "NotFoundErrorResponse",
   "namespace": "Todo.TodoItems",
   "crossLanguageDefinitionId": "Todo.TodoItems.NotFoundErrorResponse",
   "usage": "Json,Exception",
   "decorators": [],
   "properties": [
    {
     "$id": "8563",
     "kind": "property",
     "name": "code",
     "serializedName": "code",
     "type": {
      "$id": "8564",
      "kind": "constant",
      "valueType": {
       "$ref": "16"
      },
      "value": "not-found",
      "decorators": []
     },
     "optional": false,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "Todo.TodoItems.NotFoundErrorResponse.code",
     "serializationOptions": {
      "$id": "8565",
      "json": {
       "$id": "8566",
       "name": "code"
      }
     }
    }
   ]
  },
  {
   "$id": "8567",
   "kind": "model",
   "name": "TodoItemPatch",
   "namespace": "Todo.TodoItems",
   "crossLanguageDefinitionId": "Todo.TodoItems.TodoItemPatch",
   "usage": "Input,JsonMergePatch,Json",
   "decorators": [],
   "properties": [
    {
     "$id": "8568",
     "kind": "property",
     "name": "title",
     "serializedName": "title",
     "doc": "The item's title",
     "type": {
      "$id": "8569",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "optional": true,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "Todo.TodoItems.TodoItemPatch.title",
     "serializationOptions": {
      "$id": "8570",
      "json": {
       "$id": "8571",
       "name": "title"
      }
     }
    },
    {
     "$id": "8572",
     "kind": "property",
     "name": "assignedTo",
     "serializedName": "assignedTo",
     "doc": "User that the todo is assigned to",
     "type": {
      "$id": "8573",
      "kind": "nullable",
      "type": {
       "$id": "8574",
       "kind": "safeint",
       "name": "safeint",
       "crossLanguageDefinitionId": "TypeSpec.safeint",
       "decorators": []
      },
      "namespace": ""
     },
     "optional": true,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "Todo.TodoItems.TodoItemPatch.assignedTo",
     "serializationOptions": {
      "$id": "8575",
      "json": {
       "$id": "8576",
       "name": "assignedTo"
      }
     }
    },
    {
     "$id": "8577",
     "kind": "property",
     "name": "description",
     "serializedName": "description",
     "doc": "A longer description of the todo item in markdown format",
     "type": {
      "$id": "8578",
      "kind": "nullable",
      "type": {
       "$id": "8579",
       "kind": "string",
       "name": "string",
       "crossLanguageDefinitionId": "TypeSpec.string",
       "decorators": []
      },
      "namespace": ""
     },
     "optional": true,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "Todo.TodoItems.TodoItemPatch.description",
     "serializationOptions": {
      "$id": "8580",
      "json": {
       "$id": "8581",
       "name": "description"
      }
     }
    },
    {
     "$id": "8582",
     "kind": "property",
     "name": "status",
     "serializedName": "status",
     "doc": "The status of the todo item",
     "type": {
      "$ref": "19"
     },
     "optional": true,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "Todo.TodoItems.TodoItemPatch.status",
     "serializationOptions": {
      "$id": "8583",
      "json": {
       "$id": "8584",
       "name": "status"
      }
     }
    }
   ]
  },
  {
   "$id": "8585",
   "kind": "model",
   "name": "PageTodoAttachment",
   "namespace": "Todo.TodoItems",
   "crossLanguageDefinitionId": "Todo.TodoItems.Page",
   "usage": "Output,Json",
   "decorators": [],
   "properties": [
    {
     "$id": "8586",
     "kind": "property",
     "name": "items",
     "serializedName": "items",
     "type": {
      "$id": "8587",
      "kind": "array",
      "name": "ArrayTodoAttachment",
      "valueType": {
       "$ref": "167"
      },
      "crossLanguageDefinitionId": "TypeSpec.Array",
      "decorators": []
     },
     "optional": false,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "Todo.TodoItems.Page.items",
     "serializationOptions": {
      "$id": "8588",
      "json": {
       "$id": "8589",
       "name": "items"
      }
     }
    }
   ]
  },
  {
   "$id": "8590",
   "kind": "model",
   "name": "FileAttachmentMultipartRequest",
   "namespace": "Todo",
   "crossLanguageDefinitionId": "Todo.FileAttachmentMultipartRequest",
   "usage": "Input,MultipartFormData",
   "decorators": [],
   "properties": [
    {
     "$id": "8591",
     "kind": "property",
     "name": "contents",
     "serializedName": "contents",
     "type": {
      "$ref": "195"
     },
     "optional": false,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "Todo.FileAttachmentMultipartRequest.contents",
     "serializationOptions": {
      "$id": "8592",
      "multipart": {
       "$id": "8593",
       "isFilePart": true,
       "isMulti": false,
       "filename": {
        "$ref": "207"
       },
       "contentType": {
        "$ref": "8552"
       },
       "defaultContentTypes": [
        "*/*"
       ],
       "name": "contents"
      }
     }
    }
   ]
  }
 ],
 "clients": [
  {
   "$id": "8594",
   "kind": "client",
   "name": "TodoClient",
   "namespace": "Todo",
   "operations": [],
   "parameters": [
    {
     "$id": "8595",
     "name": "endpoint",
     "nameInRequest": "endpoint",
     "doc": "Service host",
     "type": {
      "$id": "8596",
      "kind": "url",
      "name": "url",
      "crossLanguageDefinitionId": "TypeSpec.url"
     },
     "location": "Uri",
     "isApiVersion": false,
     "isContentType": false,
     "isRequired": true,
     "isEndpoint": true,
     "skipUrlEncoding": false,
     "explode": false,
     "kind": "Client"
    }
   ],
   "decorators": [],
   "crossLanguageDefinitionId": "Todo",
   "apiVersions": [],
   "children": [
    {
     "$id": "8597",
     "kind": "client",
     "name": "Users",
     "namespace": "Todo.Users",
     "operations": [
      {
       "$id": "8598",
       "name": "create",
       "resourceName": "Users",
       "accessibility": "public",
       "parameters": [
        {
         "$id": "8599",
         "name": "contentType",
         "nameInRequest": "Content-Type",
         "doc": "Body parameter's content type. Known values are application/json",
         "type": {
          "$id": "8600",
          "kind": "constant",
          "valueType": {
           "$id": "8601",
           "kind": "string",
           "name": "string",
           "crossLanguageDefinitionId": "TypeSpec.string",
           "decorators": []
          },
          "value": "application/json",
          "decorators": []
         },
         "location": "Header",
         "isApiVersion": false,
         "isContentType": true,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Constant",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "8602",
         "name": "accept",
         "nameInRequest": "Accept",
         "type": {
          "$id": "8603",
          "kind": "constant",
          "valueType": {
           "$id": "8604",
           "kind": "string",
           "name": "string",
           "crossLanguageDefinitionId": "TypeSpec.string",
           "decorators": []
          },
          "value": "application/json",
          "decorators": []
         },
         "location": "Header",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Constant",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "8605",
         "name": "user",
         "nameInRequest": "user",
         "type": {
          "$ref": "27"
         },
         "location": "Body",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Method",
         "decorators": [],
         "skipUrlEncoding": false
        }
       ],
       "responses": [
        {
         "$id": "8606",
         "statusCodes": [
          200
         ],
         "bodyType": {
          "$ref": "44"
         },
         "headers": [],
         "isErrorResponse": false,
         "contentTypes": [
          "application/json"
         ]
        }
       ],
       "httpMethod": "POST",
       "uri": "{endpoint}",
       "path": "/users",
       "requestMediaTypes": [
        "application/json"
       ],
       "bufferResponse": true,
       "generateProtocolMethod": true,
       "generateConvenienceMethod": true,
       "crossLanguageDefinitionId": "Todo.Users.create",
       "decorators": []
      }
     ],
     "parameters": [
      {
       "$id": "8607",
       "name": "endpoint",
       "nameInRequest": "endpoint",
       "doc": "Service host",
       "type": {
        "$id": "8608",
        "kind": "url",
        "name": "url",
        "crossLanguageDefinitionId": "TypeSpec.url"
       },
       "location": "Uri",
       "isApiVersion": false,
       "isContentType": false,
       "isRequired": true,
       "isEndpoint": true,
       "skipUrlEncoding": false,
       "explode": false,
       "kind": "Client"
      }
     ],
     "decorators": [],
     "crossLanguageDefinitionId": "Todo.Users",
     "apiVersions": [],
     "parent": {
      "$ref": "8594"
     }
    },
    {
     "$id": "8609",
     "kind": "client",
     "name": "TodoItems",
     "namespace": "Todo.TodoItems",
     "operations": [
      {
       "$id": "8610",
       "name": "list",
       "resourceName": "TodoItems",
       "accessibility": "public",
       "parameters": [
        {
         "$id": "8611",
         "name": "limit",
         "nameInRequest": "limit",
         "doc": "The limit to the number of items",
         "type": {
          "$id": "8612",
          "kind": "int32",
          "name": "int32",
          "crossLanguageDefinitionId": "TypeSpec.int32",
          "decorators": []
         },
         "location": "Query",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": false,
         "kind": "Method",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "8613",
         "name": "offset",
         "nameInRequest": "offset",
         "doc": "The offset to start paginating at",
         "type": {
          "$id": "8614",
          "kind": "int32",
          "name": "int32",
          "crossLanguageDefinitionId": "TypeSpec.int32",
          "decorators": []
         },
         "location": "Query",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": false,
         "kind": "Method",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "8615",
         "name": "accept",
         "nameInRequest": "Accept",
         "type": {
          "$id": "8616",
          "kind": "constant",
          "valueType": {
           "$id": "8617",
           "kind": "string",
           "name": "string",
           "crossLanguageDefinitionId": "TypeSpec.string",
           "decorators": []
          },
          "value": "application/json",
          "decorators": []
         },
         "location": "Header",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Constant",
         "decorators": [],
         "skipUrlEncoding": false
        }
       ],
       "responses": [
        {
         "$id": "8618",
         "statusCodes": [
          200
         ],
         "bodyType": {
          "$ref": "86"
         },
         "headers": [],
         "isErrorResponse": false,
         "contentTypes": [
          "application/json"
         ]
        }
       ],
       "httpMethod": "GET",
       "uri": "{endpoint}",
       "path": "/items",
       "bufferResponse": true,
       "paging": {
        "$id": "8619",
        "itemPropertySegments": [
         "items"
        ],
        "nextLink": {
         "$id": "8620",
         "responseSegments": [
          "nextLink"
         ],
         "responseLocation": "Body"
        }
       },
       "generateProtocolMethod": true,
       "generateConvenienceMethod": true,
       "crossLanguageDefinitionId": "Todo.TodoItems.list",
       "decorators": []
      },
      {
       "$id": "8621",
       "name": "createJson",
       "resourceName": "TodoItems",
       "accessibility": "public",
       "parameters": [
        {
         "$id": "8622",
         "name": "contentType",
         "nameInRequest": "Content-Type",
         "type": {
          "$id": "8623",
          "kind": "constant",
          "valueType": {
           "$id": "8624",
           "kind": "string",
           "name": "string",
           "crossLanguageDefinitionId": "TypeSpec.string",
           "decorators": []
          },
          "value": "application/json",
          "decorators": []
         },
         "location": "Header",
         "isApiVersion": false,
         "isContentType": true,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Constant",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "8625",
         "name": "accept",
         "nameInRequest": "Accept",
         "type": {
          "$id": "8626",
          "kind": "constant",
          "valueType": {
           "$id": "8627",
           "kind": "string",
           "name": "string",
           "crossLanguageDefinitionId": "TypeSpec.string",
           "decorators": []
          },
          "value": "application/json",
          "decorators": []
         },
         "location": "Header",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Constant",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "8628",
         "name": "createJsonRequest",
         "nameInRequest": "createJsonRequest",
         "type": {
          "$ref": "180"
         },
         "location": "Body",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Spread",
         "decorators": [],
         "skipUrlEncoding": false
        }
       ],
       "responses": [
        {
         "$id": "8629",
         "statusCodes": [
          200
         ],
         "bodyType": {
          "$ref": "89"
         },
         "headers": [],
         "isErrorResponse": false,
         "contentTypes": [
          "application/json"
         ]
        }
       ],
       "httpMethod": "POST",
       "uri": "{endpoint}",
       "path": "/items",
       "requestMediaTypes": [
        "application/json"
       ],
       "bufferResponse": true,
       "generateProtocolMethod": true,
       "generateConvenienceMethod": true,
       "crossLanguageDefinitionId": "Todo.TodoItems.createJson",
       "decorators": []
      },
      {
       "$id": "8630",
       "name": "createForm",
       "resourceName": "TodoItems",
       "accessibility": "public",
       "parameters": [
        {
         "$id": "8631",
         "name": "contentType",
         "nameInRequest": "Content-Type",
         "type": {
          "$id": "8632",
          "kind": "constant",
          "valueType": {
           "$id": "8633",
           "kind": "string",
           "name": "string",
           "crossLanguageDefinitionId": "TypeSpec.string",
           "decorators": []
          },
          "value": "multipart/form-data",
          "decorators": []
         },
         "location": "Header",
         "isApiVersion": false,
         "isContentType": true,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Constant",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "8634",
         "name": "accept",
         "nameInRequest": "Accept",
         "type": {
          "$id": "8635",
          "kind": "constant",
          "valueType": {
           "$id": "8636",
           "kind": "string",
           "name": "string",
           "crossLanguageDefinitionId": "TypeSpec.string",
           "decorators": []
          },
          "value": "application/json",
          "decorators": []
         },
         "location": "Header",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Constant",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "8637",
         "name": "body",
         "nameInRequest": "body",
         "type": {
          "$ref": "189"
         },
         "location": "Body",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Method",
         "decorators": [],
         "skipUrlEncoding": false
        }
       ],
       "responses": [
        {
         "$id": "8638",
         "statusCodes": [
          200
         ],
         "bodyType": {
          "$ref": "89"
         },
         "headers": [],
         "isErrorResponse": false,
         "contentTypes": [
          "application/json"
         ]
        }
       ],
       "httpMethod": "POST",
       "uri": "{endpoint}",
       "path": "/items",
       "requestMediaTypes": [
        "multipart/form-data"
       ],
       "bufferResponse": true,
       "generateProtocolMethod": true,
       "generateConvenienceMethod": true,
       "crossLanguageDefinitionId": "Todo.TodoItems.createForm",
       "decorators": []
      },
      {
       "$id": "8639",
       "name": "get",
       "resourceName": "TodoItems",
       "accessibility": "public",
       "parameters": [
        {
         "$id": "8640",
         "name": "id",
         "nameInRequest": "id",
         "type": {
          "$id": "8641",
          "kind": "safeint",
          "name": "safeint",
          "crossLanguageDefinitionId": "TypeSpec.safeint",
          "decorators": []
         },
         "location": "Path",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Method",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "8642",
         "name": "accept",
         "nameInRequest": "Accept",
         "type": {
          "$id": "8643",
          "kind": "constant",
          "valueType": {
           "$id": "8644",
           "kind": "string",
           "name": "string",
           "crossLanguageDefinitionId": "TypeSpec.string",
           "decorators": []
          },
          "value": "application/json",
          "decorators": []
         },
         "location": "Header",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Constant",
         "decorators": [],
         "skipUrlEncoding": false
        }
       ],
       "responses": [
        {
         "$id": "8645",
         "statusCodes": [
          200
         ],
         "bodyType": {
          "$ref": "89"
         },
         "headers": [],
         "isErrorResponse": false,
         "contentTypes": [
          "application/json"
         ]
        }
       ],
       "httpMethod": "GET",
       "uri": "{endpoint}",
       "path": "/items/{id}",
       "bufferResponse": true,
       "generateProtocolMethod": true,
       "generateConvenienceMethod": true,
       "crossLanguageDefinitionId": "Todo.TodoItems.get",
       "decorators": []
      },
      {
       "$id": "8646",
       "name": "update",
       "resourceName": "TodoItems",
       "accessibility": "public",
       "parameters": [
        {
         "$id": "8647",
         "name": "contentType",
         "nameInRequest": "Content-Type",
         "type": {
          "$id": "8648",
          "kind": "constant",
          "valueType": {
           "$id": "8649",
           "kind": "string",
           "name": "string",
           "crossLanguageDefinitionId": "TypeSpec.string",
           "decorators": []
          },
          "value": "application/merge-patch+json",
          "decorators": []
         },
         "location": "Header",
         "isApiVersion": false,
         "isContentType": true,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Constant",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "8650",
         "name": "id",
         "nameInRequest": "id",
         "type": {
          "$id": "8651",
          "kind": "safeint",
          "name": "safeint",
          "crossLanguageDefinitionId": "TypeSpec.safeint",
          "decorators": []
         },
         "location": "Path",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Method",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "8652",
         "name": "accept",
         "nameInRequest": "Accept",
         "type": {
          "$id": "8653",
          "kind": "constant",
          "valueType": {
           "$id": "8654",
           "kind": "string",
           "name": "string",
           "crossLanguageDefinitionId": "TypeSpec.string",
           "decorators": []
          },
          "value": "application/json",
          "decorators": []
         },
         "location": "Header",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Constant",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "8655",
         "name": "patch",
         "nameInRequest": "patch",
         "type": {
          "$ref": "8567"
         },
         "location": "Body",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Method",
         "decorators": [],
         "skipUrlEncoding": false
        }
       ],
       "responses": [
        {
         "$id": "8656",
         "statusCodes": [
          200
         ],
         "bodyType": {
          "$ref": "89"
         },
         "headers": [],
         "isErrorResponse": false,
         "contentTypes": [
          "application/json"
         ]
        }
       ],
       "httpMethod": "PATCH",
       "uri": "{endpoint}",
       "path": "/items/{id}",
       "requestMediaTypes": [
        "application/merge-patch+json"
       ],
       "bufferResponse": true,
       "generateProtocolMethod": true,
       "generateConvenienceMethod": false,
       "crossLanguageDefinitionId": "Todo.TodoItems.update",
       "decorators": []
      },
      {
       "$id": "8657",
       "name": "delete",
       "resourceName": "TodoItems",
       "accessibility": "public",
       "parameters": [
        {
         "$id": "8658",
         "name": "id",
         "nameInRequest": "id",
         "type": {
          "$id": "8659",
          "kind": "safeint",
          "name": "safeint",
          "crossLanguageDefinitionId": "TypeSpec.safeint",
          "decorators": []
         },
         "location": "Path",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Method",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "8660",
         "name": "accept",
         "nameInRequest": "Accept",
         "type": {
          "$id": "8661",
          "kind": "constant",
          "valueType": {
           "$id": "8662",
           "kind": "string",
           "name": "string",
           "crossLanguageDefinitionId": "TypeSpec.string",
           "decorators": []
          },
          "value": "application/json",
          "decorators": []
         },
         "location": "Header",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Constant",
         "decorators": [],
         "skipUrlEncoding": false
        }
       ],
       "responses": [
        {
         "$id": "8663",
         "statusCodes": [
          204
         ],
         "headers": [],
         "isErrorResponse": false
        }
       ],
       "httpMethod": "DELETE",
       "uri": "{endpoint}",
       "path": "/items/{id}",
       "bufferResponse": true,
       "generateProtocolMethod": true,
       "generateConvenienceMethod": true,
       "crossLanguageDefinitionId": "Todo.TodoItems.delete",
       "decorators": []
      }
     ],
     "parameters": [
      {
       "$id": "8664",
       "name": "endpoint",
       "nameInRequest": "endpoint",
       "doc": "Service host",
       "type": {
        "$id": "8665",
        "kind": "url",
        "name": "url",
        "crossLanguageDefinitionId": "TypeSpec.url"
       },
       "location": "Uri",
       "isApiVersion": false,
       "isContentType": false,
       "isRequired": true,
       "isEndpoint": true,
       "skipUrlEncoding": false,
       "explode": false,
       "kind": "Client"
      }
     ],
     "decorators": [],
     "crossLanguageDefinitionId": "Todo.TodoItems",
     "apiVersions": [],
     "parent": {
      "$ref": "8594"
     },
     "children": [
      {
       "$id": "8666",
       "kind": "client",
       "name": "Attachments",
       "namespace": "Todo.TodoItems.Attachments",
       "operations": [
        {
         "$id": "8667",
         "name": "list",
         "resourceName": "Attachments",
         "accessibility": "public",
         "parameters": [
          {
           "$id": "8668",
           "name": "itemId",
           "nameInRequest": "itemId",
           "type": {
            "$id": "8669",
            "kind": "safeint",
            "name": "safeint",
            "crossLanguageDefinitionId": "TypeSpec.safeint",
            "decorators": []
           },
           "location": "Path",
           "isApiVersion": false,
           "isContentType": false,
           "isEndpoint": false,
           "explode": false,
           "isRequired": true,
           "kind": "Method",
           "decorators": [],
           "skipUrlEncoding": false
          },
          {
           "$id": "8670",
           "name": "accept",
           "nameInRequest": "Accept",
           "type": {
            "$id": "8671",
            "kind": "constant",
            "valueType": {
             "$id": "8672",
             "kind": "string",
             "name": "string",
             "crossLanguageDefinitionId": "TypeSpec.string",
             "decorators": []
            },
            "value": "application/json",
            "decorators": []
           },
           "location": "Header",
           "isApiVersion": false,
           "isContentType": false,
           "isEndpoint": false,
           "explode": false,
           "isRequired": true,
           "kind": "Constant",
           "decorators": [],
           "skipUrlEncoding": false
          }
         ],
         "responses": [
          {
           "$id": "8673",
           "statusCodes": [
            200
           ],
           "bodyType": {
            "$ref": "8585"
           },
           "headers": [],
           "isErrorResponse": false,
           "contentTypes": [
            "application/json"
           ]
          }
         ],
         "httpMethod": "GET",
         "uri": "{endpoint}",
         "path": "/items/{itemId}/attachments",
         "bufferResponse": true,
         "paging": {
          "$id": "8674",
          "itemPropertySegments": [
           "items"
          ]
         },
         "generateProtocolMethod": true,
         "generateConvenienceMethod": true,
         "crossLanguageDefinitionId": "Todo.TodoItems.Attachments.list",
         "decorators": []
        },
        {
         "$id": "8675",
         "name": "createJsonAttachment",
         "resourceName": "Attachments",
         "accessibility": "public",
         "parameters": [
          {
           "$id": "8676",
           "name": "contentType",
           "nameInRequest": "Content-Type",
           "type": {
            "$id": "8677",
            "kind": "constant",
            "valueType": {
             "$id": "8678",
             "kind": "string",
             "name": "string",
             "crossLanguageDefinitionId": "TypeSpec.string",
             "decorators": []
            },
            "value": "application/json",
            "decorators": []
           },
           "location": "Header",
           "isApiVersion": false,
           "isContentType": true,
           "isEndpoint": false,
           "explode": false,
           "isRequired": true,
           "kind": "Constant",
           "decorators": [],
           "skipUrlEncoding": false
          },
          {
           "$id": "8679",
           "name": "itemId",
           "nameInRequest": "itemId",
           "type": {
            "$id": "8680",
            "kind": "safeint",
            "name": "safeint",
            "crossLanguageDefinitionId": "TypeSpec.safeint",
            "decorators": []
           },
           "location": "Path",
           "isApiVersion": false,
           "isContentType": false,
           "isEndpoint": false,
           "explode": false,
           "isRequired": true,
           "kind": "Method",
           "decorators": [],
           "skipUrlEncoding": false
          },
          {
           "$id": "8681",
           "name": "accept",
           "nameInRequest": "Accept",
           "type": {
            "$id": "8682",
            "kind": "constant",
            "valueType": {
             "$id": "8683",
             "kind": "string",
             "name": "string",
             "crossLanguageDefinitionId": "TypeSpec.string",
             "decorators": []
            },
            "value": "application/json",
            "decorators": []
           },
           "location": "Header",
           "isApiVersion": false,
           "isContentType": false,
           "isEndpoint": false,
           "explode": false,
           "isRequired": true,
           "kind": "Constant",
           "decorators": [],
           "skipUrlEncoding": false
          },
          {
           "$id": "8684",
           "name": "contents",
           "nameInRequest": "contents",
           "type": {
            "$ref": "167"
           },
           "location": "Body",
           "isApiVersion": false,
           "isContentType": false,
           "isEndpoint": false,
           "explode": false,
           "isRequired": true,
           "kind": "Method",
           "decorators": [],
           "skipUrlEncoding": false
          }
         ],
         "responses": [
          {
           "$id": "8685",
           "statusCodes": [
            204
           ],
           "headers": [],
           "isErrorResponse": false
          }
         ],
         "httpMethod": "POST",
         "uri": "{endpoint}",
         "path": "/items/{itemId}/attachments",
         "requestMediaTypes": [
          "application/json"
         ],
         "bufferResponse": true,
         "generateProtocolMethod": true,
         "generateConvenienceMethod": true,
         "crossLanguageDefinitionId": "Todo.TodoItems.Attachments.createJsonAttachment",
         "decorators": []
        },
        {
         "$id": "8686",
         "name": "createFileAttachment",
         "resourceName": "Attachments",
         "accessibility": "public",
         "parameters": [
          {
           "$id": "8687",
           "name": "contentType",
           "nameInRequest": "Content-Type",
           "type": {
            "$id": "8688",
            "kind": "constant",
            "valueType": {
             "$id": "8689",
             "kind": "string",
             "name": "string",
             "crossLanguageDefinitionId": "TypeSpec.string",
             "decorators": []
            },
            "value": "multipart/form-data",
            "decorators": []
           },
           "location": "Header",
           "isApiVersion": false,
           "isContentType": true,
           "isEndpoint": false,
           "explode": false,
           "isRequired": true,
           "kind": "Constant",
           "decorators": [],
           "skipUrlEncoding": false
          },
          {
           "$id": "8690",
           "name": "itemId",
           "nameInRequest": "itemId",
           "type": {
            "$id": "8691",
            "kind": "safeint",
            "name": "safeint",
            "crossLanguageDefinitionId": "TypeSpec.safeint",
            "decorators": []
           },
           "location": "Path",
           "isApiVersion": false,
           "isContentType": false,
           "isEndpoint": false,
           "explode": false,
           "isRequired": true,
           "kind": "Method",
           "decorators": [],
           "skipUrlEncoding": false
          },
          {
           "$id": "8692",
           "name": "accept",
           "nameInRequest": "Accept",
           "type": {
            "$id": "8693",
            "kind": "constant",
            "valueType": {
             "$id": "8694",
             "kind": "string",
             "name": "string",
             "crossLanguageDefinitionId": "TypeSpec.string",
             "decorators": []
            },
            "value": "application/json",
            "decorators": []
           },
           "location": "Header",
           "isApiVersion": false,
           "isContentType": false,
           "isEndpoint": false,
           "explode": false,
           "isRequired": true,
           "kind": "Constant",
           "decorators": [],
           "skipUrlEncoding": false
          },
          {
           "$id": "8695",
           "name": "body",
           "nameInRequest": "body",
           "type": {
            "$ref": "8590"
           },
           "location": "Body",
           "isApiVersion": false,
           "isContentType": false,
           "isEndpoint": false,
           "explode": false,
           "isRequired": true,
           "kind": "Method",
           "decorators": [],
           "skipUrlEncoding": false
          }
         ],
         "responses": [
          {
           "$id": "8696",
           "statusCodes": [
            204
           ],
           "headers": [],
           "isErrorResponse": false
          }
         ],
         "httpMethod": "POST",
         "uri": "{endpoint}",
         "path": "/items/{itemId}/attachments",
         "requestMediaTypes": [
          "multipart/form-data"
         ],
         "bufferResponse": true,
         "generateProtocolMethod": true,
         "generateConvenienceMethod": true,
         "crossLanguageDefinitionId": "Todo.TodoItems.Attachments.createFileAttachment",
         "decorators": []
        }
       ],
       "parameters": [
        {
         "$id": "8697",
         "name": "endpoint",
         "nameInRequest": "endpoint",
         "doc": "Service host",
         "type": {
          "$id": "8698",
          "kind": "url",
          "name": "url",
          "crossLanguageDefinitionId": "TypeSpec.url"
         },
         "location": "Uri",
         "isApiVersion": false,
         "isContentType": false,
         "isRequired": true,
         "isEndpoint": true,
         "skipUrlEncoding": false,
         "explode": false,
         "kind": "Client"
        }
       ],
       "decorators": [],
       "crossLanguageDefinitionId": "Todo.TodoItems.Attachments",
       "apiVersions": [],
       "parent": {
        "$ref": "8609"
       }
      }
     ]
    }
   ]
  }
 ],
 "auth": {
  "$id": "8699",
  "apiKey": {
   "$id": "8700",
   "name": "Authorization",
   "in": "header",
   "prefix": "Bearer"
  }
 }
}
