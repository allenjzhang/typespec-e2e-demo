// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Todo;

namespace Todo.Models
{
    /// <summary> The TodoFileAttachment. </summary>
    public partial class TodoFileAttachment
    {
        /// <summary> Keeps track of any properties unknown to the library. </summary>
        private protected readonly IDictionary<string, BinaryData> _additionalBinaryDataProperties;

        /// <summary> Initializes a new instance of <see cref="TodoFileAttachment"/>. </summary>
        /// <param name="filename"> The file name of the attachment. </param>
        /// <param name="mediaType"> The media type of the attachment. </param>
        /// <param name="contents"> The contents of the file. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="filename"/>, <paramref name="mediaType"/> or <paramref name="contents"/> is null. </exception>
        public TodoFileAttachment(string filename, string mediaType, BinaryData contents)
        {
            Argument.AssertNotNull(filename, nameof(filename));
            Argument.AssertNotNull(mediaType, nameof(mediaType));
            Argument.AssertNotNull(contents, nameof(contents));

            Filename = filename;
            MediaType = mediaType;
            Contents = contents;
        }

        internal TodoFileAttachment(string filename, string mediaType, BinaryData contents, IDictionary<string, BinaryData> additionalBinaryDataProperties)
        {
            Filename = filename;
            MediaType = mediaType;
            Contents = contents;
            _additionalBinaryDataProperties = additionalBinaryDataProperties;
        }

        /// <summary> The file name of the attachment. </summary>
        public string Filename { get; set; }

        /// <summary> The media type of the attachment. </summary>
        public string MediaType { get; set; }

        /// <summary>
        /// The contents of the file
        /// <para>
        /// To assign a byte[] to this property use <see cref="BinaryData.FromBytes(byte[])"/>.
        /// The byte[] will be serialized to a Base64 encoded string.
        /// </para>
        /// <para>
        /// Examples:
        /// <list type="bullet">
        /// <item>
        /// <term> BinaryData.FromBytes(new byte[] { 1, 2, 3 }). </term>
        /// <description> Creates a payload of "AQID". </description>
        /// </item>
        /// </list>
        /// </para>
        /// </summary>
        public BinaryData Contents { get; set; }
    }
}
