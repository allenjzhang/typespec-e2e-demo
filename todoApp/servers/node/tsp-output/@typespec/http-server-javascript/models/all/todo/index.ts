// Generated by Microsoft TypeSpec

import {
  TodoItemHttpPart,
  ArrayHttpPart,
  NoContentResponse,
} from "../typespec/http.js";

import {
  UserCreatedResponse,
  UserExistsResponse,
  InvalidUserResponse,
} from "./users.js";

import {
  TodoPage,
  InvalidTodoItem,
  NotFoundErrorResponse,
  TodoItemPatch,
} from "./todo-items/index.js";

import { ListOptions, CreateJsonOptions } from "../../synthetic.js";

export interface User {
  /**
   * An autogenerated unique id for the user
   */
  id: number;

  /**
   * The user's username
   */
  username: string;

  /**
   * The user's email address
   */
  email: string;

  /**
   * The user's password, provided when creating a user
   * but is otherwise not visible (and hashed by the backend)
   */
  password: string;

  /**
   * Whether the user is validated. Never visible to the API.
   */
  validated: boolean;
}

export interface TodoItem {
  /**
   * The item's unique id
   */
  id: number;

  /**
   * The item's title
   */
  title: string;

  /**
   * User that created the todo
   */
  createdBy: number;

  /**
   * User that the todo is assigned to
   */
  assignedTo?: number;

  /**
   * A longer description of the todo item in markdown format
   */
  description?: string;

  /**
   * The status of the todo item
   */
  status: "NotStarted" | "InProgress" | "Completed";

  /**
   * When the todo item was created.
   */
  createdAt: Date;

  /**
   * When the todo item was last updated
   */
  updatedAt: Date;

  /**
   * When the todo item was makred as completed
   */
  completedAt?: Date;

  labels?: string | string[] | TodoLabelRecord | TodoLabelRecord[];

  dummy?: string;
}

export interface TodoLabelRecord {
  name: string;

  color?: string;
}

export interface TodoFileAttachment {
  contentType?: string;

  filename?: string;

  contents: Uint8Array;
}

export interface TodoUrlAttachment {
  /**
   * A description of the URL
   */
  description: string;

  /**
   * The url
   */
  url: string;
}

export interface ToDoItemMultipartRequest {
  item: TodoItemHttpPart;

  attachments?: ArrayHttpPart;
}

/** An interface representing the operations defined in the 'Todo.Users' namespace. */
export interface Users<Context = unknown> {
  create(
    ctx: Context,
    user: User,
  ): Promise<
    | UserCreatedResponse
    | UserExistsResponse
    | InvalidUserResponse
    | Standard4XxResponse
    | Standard5XxResponse
  >;
}

/** An interface representing the operations defined in the 'Todo.TodoItems' namespace. */
export interface TodoItems<Context = unknown> {
  list(
    ctx: Context,
    options?: ListOptions,
  ): Promise<TodoPage | Standard4XxResponse | Standard5XxResponse>;

  createJson(
    ctx: Context,
    item: TodoItem,
    options?: CreateJsonOptions,
  ): Promise<
    TodoItem | InvalidTodoItem | Standard4XxResponse | Standard5XxResponse
  >;

  createForm(
    ctx: Context,
    body: ToDoItemMultipartRequest,
  ): Promise<
    TodoItem | InvalidTodoItem | Standard4XxResponse | Standard5XxResponse
  >;

  get(ctx: Context, id: number): Promise<TodoItem | NotFoundErrorResponse>;

  update(ctx: Context, id: number, patch: TodoItemPatch): Promise<TodoItem>;

  delete(
    ctx: Context,
    id: number,
  ): Promise<
    | NoContentResponse
    | NotFoundErrorResponse
    | Standard4XxResponse
    | Standard5XxResponse
  >;
}

export interface ApiError {
  /**
   * A machine readable error code
   */
  code: string;

  /**
   * A human readable message
   */
  message: string;
}

/**
 * Something is wrong with you.
 */
export interface Standard4XxResponse extends ApiError {
  statusCode: number;
}

/**
 * Something is wrong with me.
 */
export interface Standard5XxResponse extends ApiError {
  statusCode: number;
}

export type TodoLabels =
  | string
  | string[]
  | TodoLabelRecord
  | TodoLabelRecord[];

export type TodoAttachment = TodoFileAttachment | TodoUrlAttachment;
